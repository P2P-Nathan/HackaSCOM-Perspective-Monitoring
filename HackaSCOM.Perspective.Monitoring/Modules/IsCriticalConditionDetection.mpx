<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>
    <ModuleTypes>
      <ConditionDetectionModuleType ID="HackaSCOM.Perspective.Monitoring.Module.IsCriticalConditionDetection" Accessibility="Public">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>System!System.ExpressionEvaluatorSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="WarningThreshold" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="CriticalThreshold" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Operator" type="CriteriaCompareType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <And>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                        </ValueExpression>
                        <Operator>$Config/Operator$</Operator>
                        <ValueExpression>
                          <Value Type="Double">$Config/WarningThreshold$</Value>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                        </ValueExpression>
                        <Operator>$Config/Operator$</Operator>
                        <ValueExpression>
                          <Value Type="Double">$Config/CriticalThreshold$</Value>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                  </And>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter"/>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.BaseData</OutputType>
        <InputTypes>
          <InputType>System!System.BaseData</InputType>
        </InputTypes>
      </ConditionDetectionModuleType>
    </ModuleTypes>
  </TypeDefinitions>
</ManagementPackFragment>
